import os
import sys

samples = {}
SamplesFile = 'step1-GS.py'

print " SamplesFile =", SamplesFile   

print sys.argv
if len(sys.argv) <= 1 :
    print "please tell me what you want to do: \n"
    print "submit: python script.py submit"
    print "resubmit: python script.py resubmit"
    print "kill: python script.py kill"
    print "report: python script.py report \n"
    exit()


if os.path.exists(SamplesFile) :
    handle = open(SamplesFile,'r')
    exec(handle)
    handle.close()


    for key, value in samples.iteritems():
        chiave = key
        #stringa = str(value)


        #oFileName = "crab_cfg_step1GS_Zp2HDM_" + value[0] + ".py"
        oFileName = "crab_cfg_step1GS_Zp2HDM.py"
        oFile = open (oFileName, 'w')

        oFile.write("from CRABClient.UserUtilities import config")
        oFile.write("\n") 
        oFile.write("config = config()") 
        oFile.write("\n") 
        oFile.write("") 
        oFile.write("\n") 
        oFile.write("config.General.requestName = '" + key + "'") 
        oFile.write("\n") 
        oFile.write("config.General.workArea = 'crab_projects'") 
        oFile.write("\n") 
        oFile.write("") 
        oFile.write("\n") 
        oFile.write("config.JobType.pluginName = 'PrivateMC'") 
        oFile.write("\n") 
        oFile.write("config.JobType.generator = 'lhe'") 
        oFile.write("\n") 
        oFile.write("config.JobType.psetName = 'EXO-step1GS_Zp2HDM.py'") 
        oFile.write("\n") 
        oFile.write("") 
        oFile.write("\n") 
        oFile.write("config.Data.outputPrimaryDataset = '" + value[0] + "'") 
        oFile.write("\n") 
        oFile.write("config.Data.splitting = 'EventBased'") 
        oFile.write("\n") 
        oFile.write("config.Data.unitsPerJob = 100") 
        oFile.write("\n") 
        oFile.write("NJOBS = 500") 
        oFile.write("\n") 
        oFile.write("config.Data.totalUnits = config.Data.unitsPerJob * NJOBS") 
        oFile.write("\n") 
        oFile.write("config.Data.publication = True") 
        oFile.write("\n") 
        oFile.write("config.Data.outputDatasetTag = '" + value[1] + "'") 
        oFile.write("\n") 
        oFile.write("config.Data.outLFNDirBase = '/store/group/phys_higgs/cmshww/calderon/' ") 
        oFile.write("\n") 
        oFile.write("") 
        oFile.write("\n") 
        oFile.write("config.Site.whitelist = ['T2_CH_CERN']") 
        oFile.write("\n") 
        oFile.write("config.Site.storageSite = 'T2_CH_CERN'") 
        oFile.write("\n") 
        oFile.write("\n") 



        oFile.close()

        
        #oFileName2 = "EXO-step1GS_Zp2HDM_" + value[0] + ".py"
        oFileName2 = "EXO-step1GS_Zp2HDM.py"
        oFile2 = open (oFileName2, 'w')
        
        
        oFile2.write("# Auto generated configuration file")
        oFile2.write("\n")
        oFile2.write("# using: ")
        oFile2.write("\n")
        oFile2.write("# Revision: 1.19 ")
        oFile2.write("\n")
        oFile2.write("# Source: /local/reps/CMSSW/CMSSW/Configuration/Applications/python/ConfigBuilder.py,v ")
        oFile2.write("\n")
        oFile2.write("# with command line options: Configuration/GenProduction/python/ThirteenTeV/monoHiggs/pythia8_hadronizer_nomatching_HWWllnunu_cff.py --fileout file:EXO-RunIISummer15GS-02086.root --mc --eventcontent RAWSIM --customise SLHCUpgradeSimulations/Configuration/postLS1Customs.customisePostLS1,Configuration/DataProcessing/Utils.addMonitoring --datatier GEN-SIM --conditions MCRUN2_71_V1::All --beamspot Realistic50ns13TeVCollision --step GEN,SIM --magField 38T_PostLS1 --python_filename EXO-RunIISummer15GS-02086_1_cfg.py --no_exec -n 67 --inputEventContent=LHE --filein=file:/afs/cern.ch/user/f/fatsai/public/file_1.lhe")
        oFile2.write("\n")
        oFile2.write("import FWCore.ParameterSet.Config as cms")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("process = cms.Process('SIM')")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# import of standard configurations")
        oFile2.write("\n")
        oFile2.write("process.load('Configuration.StandardSequences.Services_cff')")
        oFile2.write("\n")
        oFile2.write("process.load('SimGeneral.HepPDTESSource.pythiapdt_cfi')")
        oFile2.write("\n")
        oFile2.write("process.load('FWCore.MessageService.MessageLogger_cfi')")
        oFile2.write("\n")
        oFile2.write("process.load('Configuration.EventContent.EventContent_cff')")
        oFile2.write("\n")
        oFile2.write("process.load('SimGeneral.MixingModule.mixNoPU_cfi')")
        oFile2.write("\n")
        oFile2.write("process.load('Configuration.StandardSequences.GeometryRecoDB_cff')")
        oFile2.write("\n")
        oFile2.write("process.load('Configuration.Geometry.GeometrySimDB_cff')")
        oFile2.write("\n")
        oFile2.write("process.load('Configuration.StandardSequences.MagneticField_38T_PostLS1_cff')")
        oFile2.write("\n")
        oFile2.write("process.load('Configuration.StandardSequences.Generator_cff')")
        oFile2.write("\n")
        oFile2.write("process.load('IOMC.EventVertexGenerators.VtxSmearedRealistic50ns13TeVCollision_cfi')")
        oFile2.write("\n")
        oFile2.write("process.load('GeneratorInterface.Core.genFilterSummary_cff')")
        oFile2.write("\n")
        oFile2.write("process.load('Configuration.StandardSequences.SimIdeal_cff')")
        oFile2.write("\n")
        oFile2.write("process.load('Configuration.StandardSequences.EndOfProcess_cff')")
        oFile2.write("\n")
        oFile2.write("process.load('Configuration.StandardSequences.FrontierConditions_GlobalTag_cff')")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("process.maxEvents = cms.untracked.PSet(")
        oFile2.write("\n")
        oFile2.write("    input = cms.untracked.int32(67)")
        oFile2.write("\n")
        oFile2.write(")")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# Input source")
        oFile2.write("\n")
        oFile2.write("process.source = cms.Source(\"LHESource\",")
        oFile2.write("\n")
        oFile2.write("    fileNames = cms.untracked.vstring('" + value[2] + "'),")#/store/group/phys_exotica/monoHiggs/Zp2HDM/MZP600_MA0400.lhe'),")
        oFile2.write("\n")
        oFile2.write("    inputCommands = cms.untracked.vstring('keep *', ")
        oFile2.write("\n")
        oFile2.write("        'drop LHEXMLStringProduct_*_*_*', ")
        oFile2.write("\n")
        oFile2.write("        'drop *', ")
        oFile2.write("\n")
        oFile2.write("        'keep LHERunInfoProduct_*_*_*', ")
        oFile2.write("\n")
        oFile2.write("        'keep LHEEventProduct_*_*_*', ")
        oFile2.write("\n")
        oFile2.write("        'keep *_externalLHEProducer_LHEScriptOutput_*'),")
        oFile2.write("\n")
        oFile2.write("    dropDescendantsOfDroppedBranches = cms.untracked.bool(False)")
        oFile2.write("\n")
        oFile2.write(")")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("process.options = cms.untracked.PSet(")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write(")")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# Production Info")
        oFile2.write("\n")
        oFile2.write("process.configurationMetadata = cms.untracked.PSet(")
        oFile2.write("\n")
        oFile2.write("    version = cms.untracked.string('$Revision: 1.19 $'),")
        oFile2.write("\n")
        oFile2.write("    #annotation = cms.untracked.string('Configuration/GenProduction/python/ThirteenTeV/monoHiggs/pythia8_hadronizer_nomatching_HWWllnunu_cff.py nevts:67'),")
        oFile2.write("\n")
        oFile2.write("    annotation = cms.untracked.string('Configuration/GenProduction/python/ThirteenTeV/Hadronizer_TuneCUETP8M1_13TeV_generic_LHE_pythia8_cff.py nevts:10'),")
        oFile2.write("\n")
        oFile2.write("    name = cms.untracked.string('Applications')")
        oFile2.write("\n")
        oFile2.write(")")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# Output definition")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("process.RAWSIMoutput = cms.OutputModule(\"PoolOutputModule\",")
        oFile2.write("\n")
        oFile2.write("    splitLevel = cms.untracked.int32(0),")
        oFile2.write("\n")
        oFile2.write("    eventAutoFlushCompressedSize = cms.untracked.int32(5242880),")
        oFile2.write("\n")
        oFile2.write("    outputCommands = process.RAWSIMEventContent.outputCommands,")
        oFile2.write("\n")
        oFile2.write("    fileName = cms.untracked.string('file:EXO-RunIISummer15GS-test.root'),")
        oFile2.write("\n")
        oFile2.write("    dataset = cms.untracked.PSet(")
        oFile2.write("\n")
        oFile2.write("        filterName = cms.untracked.string(''),")
        oFile2.write("\n")
        oFile2.write("        dataTier = cms.untracked.string('GEN-SIM')")
        oFile2.write("\n")
        oFile2.write("    ),")
        oFile2.write("\n")
        oFile2.write("    SelectEvents = cms.untracked.PSet(")
        oFile2.write("\n")
        oFile2.write("        SelectEvents = cms.vstring('generation_step')")
        oFile2.write("\n")
        oFile2.write("    )")
        oFile2.write("\n")
        oFile2.write(")")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# Additional output definition")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# Other statements")
        oFile2.write("\n")
        oFile2.write("process.genstepfilter.triggerConditions=cms.vstring(\"generation_step\")")
        oFile2.write("\n")
        oFile2.write("from Configuration.AlCa.GlobalTag import GlobalTag")
        oFile2.write("\n")
        oFile2.write("process.GlobalTag = GlobalTag(process.GlobalTag, 'MCRUN2_71_V1::All', '')")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("process.generator = cms.EDFilter(\"Pythia8HadronizerFilter\",")
        oFile2.write("\n")
        oFile2.write("    pythiaPylistVerbosity = cms.untracked.int32(1),")
        oFile2.write("\n")
        oFile2.write("    filterEfficiency = cms.untracked.double(1.0),")
        oFile2.write("\n")
        oFile2.write("    pythiaHepMCVerbosity = cms.untracked.bool(False),")
        oFile2.write("\n")
        oFile2.write("    comEnergy = cms.double(13000.0),")
        oFile2.write("\n")
        oFile2.write("    maxEventsToPrint = cms.untracked.int32(1),")
        oFile2.write("\n")
        oFile2.write("    PythiaParameters = cms.PSet(")
        oFile2.write("\n")
        oFile2.write("        pythia8CommonSettings = cms.vstring('Main:timesAllowErrors = 10000', ")
        oFile2.write("\n")
        oFile2.write("            'Check:epTolErr = 0.01', ")
        oFile2.write("\n")
        oFile2.write("            'Beams:setProductionScalesFromLHEF = off', ")
        oFile2.write("\n")
        oFile2.write("            'SLHA:keepSM = on', ")
        oFile2.write("\n")
        oFile2.write("            'SLHA:minMassSM = 1000.', ")
        oFile2.write("\n")
        oFile2.write("            'ParticleDecays:limitTau0 = on', ")
        oFile2.write("\n")
        oFile2.write("            'ParticleDecays:tau0Max = 10', ")
        oFile2.write("\n")
        oFile2.write("            'ParticleDecays:allowPhotonRadiation = on'),")
        oFile2.write("\n")
        oFile2.write("        pythia8CUEP8M1Settings = cms.vstring('Tune:pp 14', ")
        oFile2.write("\n")
        oFile2.write("            'Tune:ee 7', ")
        oFile2.write("\n")
        oFile2.write("            'MultipartonInteractions:pT0Ref=2.4024', ")
        oFile2.write("\n")
        oFile2.write("            'MultipartonInteractions:ecmPow=0.25208', ")
        oFile2.write("\n")
        oFile2.write("            'MultipartonInteractions:expPow=1.6'),")
        oFile2.write("\n")
        oFile2.write("        processParameters = cms.vstring('25:m0 = 125.0', ")
        oFile2.write("\n")
        oFile2.write("            '25:onMode = off', ")
        oFile2.write("\n")
        oFile2.write("	    '25:onIfMatch = 24 -24',           # turn ON H->WW")
        oFile2.write("\n")
        oFile2.write("            '24:mMin = 0.05',                  #  ")
        oFile2.write("\n")
        oFile2.write("            '24:onMode = off',                 # turn OFF all W decays")
        oFile2.write("\n")
        oFile2.write("            '24:onIfAny = 11 13 15 12 14 16'   # turn ON W->lnu")
        oFile2.write("\n")
        oFile2.write("	     ),")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("        parameterSets = cms.vstring('pythia8CommonSettings', ")
        oFile2.write("\n")
        oFile2.write("				    'pythia8CUEP8M1Settings',")
        oFile2.write("\n")
        oFile2.write("				    'processParameters'")
        oFile2.write("\n")
        oFile2.write("				    )")
        oFile2.write("\n")
        oFile2.write("    )")
        oFile2.write("\n")
        oFile2.write(")")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("process.ProductionFilterSequence = cms.Sequence(process.generator)")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# Path and EndPath definitions")
        oFile2.write("\n")
        oFile2.write("process.generation_step = cms.Path(process.pgen)")
        oFile2.write("\n")
        oFile2.write("process.simulation_step = cms.Path(process.psim)")
        oFile2.write("\n")
        oFile2.write("process.genfiltersummary_step = cms.EndPath(process.genFilterSummary)")
        oFile2.write("\n")
        oFile2.write("process.endjob_step = cms.EndPath(process.endOfProcess)")
        oFile2.write("\n")
        oFile2.write("process.RAWSIMoutput_step = cms.EndPath(process.RAWSIMoutput)")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# Schedule definition")
        oFile2.write("\n")
        oFile2.write("process.schedule = cms.Schedule(process.generation_step,process.genfiltersummary_step,process.simulation_step,process.endjob_step,process.RAWSIMoutput_step)")
        oFile2.write("\n")
        oFile2.write("# filter all path with the production filter sequence")
        oFile2.write("\n")
        oFile2.write("for path in process.paths:")
        oFile2.write("\n")
        oFile2.write("	getattr(process,path)._seq = process.ProductionFilterSequence * getattr(process,path)._seq ")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# customisation of the process.")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# Automatic addition of the customisation function from Configuration.DataProcessing.Utils")
        oFile2.write("\n")
        oFile2.write("from Configuration.DataProcessing.Utils import addMonitoring ")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("#call to customisation function addMonitoring imported from Configuration.DataProcessing.Utils")
        oFile2.write("\n")
        oFile2.write("process = addMonitoring(process)")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# Automatic addition of the customisation function from SLHCUpgradeSimulations.Configuration.postLS1Customs")
        oFile2.write("\n")
        oFile2.write("from SLHCUpgradeSimulations.Configuration.postLS1Customs import customisePostLS1 ")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("#call to customisation function customisePostLS1 imported from SLHCUpgradeSimulations.Configuration.postLS1Customs")
        oFile2.write("\n")
        oFile2.write("process = customisePostLS1(process)")
        oFile2.write("\n")
        oFile2.write("")
        oFile2.write("\n")
        oFile2.write("# End of customisation functions")
        oFile2.write("\n")
        
        
        oFile2.close()
        
        #import time
        #time.sleep(1)

        #oFileName2 = "EXO-step1GS_Zp2HDM_" + value[0] + ".py"
        oFileName3 = "submit.sh"
        oFile3 = open (oFileName3, 'w')

        if sys.argv[1] == 'submit' :
            oFile3.write("crab submit crab_cfg_step1GS_Zp2HDM.py")
        elif sys.argv[1] == 'resubmit' :
            oFile3.write("crab resubmit crab_cfg_step1GS_Zp2HDM.py")
        elif sys.argv[1] == 'kill' :
            oFile3.write("crab kill crab_cfg_step1GS_Zp2HDM.py")
        elif sys.argv[1] == 'report' :
            oFile3.write("crab report crab_cfg_step1GS_Zp2HDM.py")
        else :
            print "please insert a valid option: \n"
            print "submit, resumbit, kill or report"
            exit()
            
        oFile3.close()

        os.system('chmod +x submit.sh')
        os.system('./submit.sh')

        #os.system('crab submit ' + oFileName2)

        
